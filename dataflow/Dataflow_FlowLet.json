{
	"name": "Dataflow_FlowLet",
	"properties": {
		"folder": {
			"name": "dpi30testeusdj/Flowlet"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dpi30djStudentSource",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dpi30testeusdjrz_dynamic",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flowlet1",
					"flowlet": {
						"referenceName": "filterexamhall_flowlet",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          Name as string,",
				"          ExamHallNumber as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     limit: 10,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     partitionBy('hash', 1)) ~> source1",
				"source1 compose(mapColumn(",
				"          id,",
				"          Name,",
				"          ExamHallNumber",
				"     ),",
				"     composition: 'filterexamhall_flowlet') ~> flowlet1@(output1)",
				"flowlet1@output1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}