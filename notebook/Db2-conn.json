{
	"name": "Db2-conn",
	"properties": {
		"folder": {
			"name": "dpi30testeusdj/python"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "testspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "4",
				"spark.autotune.trackingId": "bb0222b3-21c8-4c22-ab1a-6b663e36f3ad"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/a802af10-3082-4ea6-b3db-542043a41e96/resourceGroups/rg-dpi30-test-eus-001/providers/Microsoft.Synapse/workspaces/dpi30-test-eus-syn-01/bigDataPools/testspark",
				"name": "testspark",
				"type": "Spark",
				"endpoint": "https://dpi30-test-eus-syn-01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%configure -f\n",
					"{\n",
					"    \"conf\": {\n",
					"        \"spark.jars\": \"abfss://rz-container@dpi30testeusdlsarz01.dfs.core.windows.net/Pricing/dj_test/db2jcc4.jar\"\n",
					"    }\n",
					"}"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"username = \"sreepada\"\n",
					"password = \"Welcome2PaaSCloud#\"\n",
					"jdbcUrl = \"jdbc:db2://0236d4e1-0af6-4535-a27a-92ac2414e3c6.bv7c3o6d0vfhru3npds0.databases.appdomain.cloud:30391/BLUDB:sslConnection=true;\"\n",
					"connectionProperties = {\n",
					"  \"user\" : username,\n",
					"  \"password\" : password,\n",
					"  \"driver\" : \"com.ibm.db2.jcc.DB2Driver\"\n",
					"}\n",
					"tablename = \"SDM.CASE\"\n",
					"df = spark.read.jdbc(url=jdbcUrl, table=tablename, properties=connectionProperties)\n",
					"df.show(10)\n",
					"\n",
					"\n",
					""
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.filter(\"CASE_UID = 233713 and CASEID ='1620047379600' \").show()\n",
					"df2=df.filter(\"CASE_UID = 233713 and CASEID ='1620047379600' \")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import * \n",
					"df3=df2.withColumn(\"CASE_UID_TEMP\",lit(9999)).withColumn(\"CASEID_TEMP\",lit(\"TEST\")).drop(*[\"CASE_UID\",\"CASEID\"]).withColumnRenamed(\"CASE_UID_TEMP\",\"CASE_UID\").withColumnRenamed(\"CASEID_TEMP\",\"CASEID\")\n",
					"df3.show()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df3.write.mode(\"append\").jdbc(url=jdbcUrl, table=tablename, properties=connectionProperties).save()"
				],
				"execution_count": 5
			}
		]
	}
}